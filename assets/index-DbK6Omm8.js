(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const l of o.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&s(l)}).observe(document,{childList:!0,subtree:!0});function e(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(i){if(i.ep)return;i.ep=!0;const o=e(i);fetch(i.href,o)}})();function p(){const n=performance.now();let t=n;return{get total(){return performance.now()-n},get interval(){return performance.now()-t},delta(){const e=performance.now(),s=e-t;return t=e,s}}}const w={VIEWPORT_WIDTH:1280,VIEWPORT_HEIGHT:720,VSYNC:!1,FPS:60,HIDE_CURSOR:!1};class m{options;canvas;ctx;fps;constructor(t,e={}){const s={...w,...e};this.options=s,this.canvas=t;const i=t.getContext("2d");if(i===null)throw new Error("Cannot get 2D context from canvas.");this.ctx=i,this.fps=s.FPS,this.setup()}setup(){this.canvas.width=this.options.VIEWPORT_WIDTH,this.canvas.height=this.options.VIEWPORT_HEIGHT,this.options.HIDE_CURSOR&&(this.canvas.style.cursor="none")}resize(t,e){this.canvas.width=t,this.canvas.height=e}render(t){const e=p();let s=0,i=0;this.ctx.imageSmoothingEnabled=!1;const o=()=>{this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),t({fps:s.toFixed(2),currentFrame:i}),i++,e.interval>1e3&&(s=i/e.delta()*1e3,i=0),this.options.VSYNC?requestAnimationFrame(o):setTimeout(o,1e3/this.options.FPS)};return o()}}class u{engine;position;size;color;visible;constructor(t){this.engine=t,this.size={width:0,height:0},this.color="black",this.visible=!0,console.log("Entity initialized.")}setSize(t,e){return this.size={width:t,height:e},this}setPosition(t,e){return this.position={x:t,y:e},this}setColor(t){return this.color=t,this}setVisible(t){return this.visible=t,this}draw(){const t=this.engine.ctx;!this.visible||!this.position||(t.fillStyle=this.color,t.fillRect(this.position.x,this.position.y,this.size.width,this.size.height))}isInBound(t){return!(!this.position||t.x<this.position.x||t.x>=this.position.x+this.size.width||t.y<this.position.y||t.y>=this.position.y+this.size.height)}}class g extends u{fps;currentFrame;constructor(t){super(t),this.setPosition(0,0)}update(t,e){this.fps=t,this.currentFrame=e}draw(){const t=this.engine.ctx,{x:e,y:s}=this.position;t.fillStyle="black",t.fillRect(e,s,135,24),t.fillRect(e,s+25,122,24),t.fillStyle="yellow",t.font="24px Consolas, monospace, sans-serif",t.textAlign="left",t.textBaseline="top",t.fillText(`FPS: ${this.fps}`,e,s),t.fillText(`Frame: ${this.currentFrame}`,e,s+25)}}function y(n){return new Promise(t=>{const e=new Image;e.onload=()=>{t(e)},e.onerror=()=>{throw new Error(`Image error: ${n}`)},e.src=n})}function v(n=window){const t={x:0,y:0,active:!1};return n.addEventListener("mousemove",e=>{if(e instanceof MouseEvent){const{clientX:s,clientY:i}=e;t.x=s,t.y=i,t.active=!0}}),n.addEventListener("mouseleave",()=>{t.active=!1}),t}const f=document.getElementById("mainframe"),a=v(f),c=new m(f,{VIEWPORT_WIDTH:window.innerWidth,VIEWPORT_HEIGHT:window.innerHeight,VSYNC:!0,FPS:75,HIDE_CURSOR:!0}),h=await y("./diamond_sword.png"),d=new g(c),r=new u(c).setColor("green").setSize(300,150).setPosition(600,300);c.render(n=>{const{fps:t,currentFrame:e}=n;r.draw(),d.update(t,e),d.draw(),a.active&&c.ctx.drawImage(h,a.x,a.y,h.width*4,h.height*4)});window.addEventListener("resize",()=>{const{innerWidth:n,innerHeight:t}=window;c.resize(n,t)});window.addEventListener("keydown",n=>{if(n instanceof KeyboardEvent){const{code:t,repeat:e}=n,s=10;if(console.log(t,e),!r.position)return;const i={...r.position};({ArrowUp:()=>i.y+=-1*s,ArrowLeft:()=>i.x+=-1*s,ArrowDown:()=>i.y+=s,ArrowRight:()=>i.x+=s})[t]?.call(null),r.position=i}});window.addEventListener("click",n=>{if(n instanceof MouseEvent&&r.visible&&r.isInBound(a)){const t=Math.random()*255,e=Math.random()*255,s=Math.random()*255;r.setColor(`rgb(${t}, ${e}, ${s})`)}});
